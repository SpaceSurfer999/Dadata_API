from dadata import Dadata
from sql_lite import create_db, get_data_db, delete_db


# делаем запрос на ключи пользователя. API-ключ и секретный ключ
token = input('Добро пожаловать в программу по определению точного местоположения!\n'
              'Для того, что бы продолжить введите Ваш API-ключ\n')
secret_key = input('Теперь введите Ваш секретный ключ\n')
language = input('Ну и осталось выбрать язык нашей программы(select language) :\nru - русский, en - английский\n' )


# Выбираем язык выдачи запросов.
if language.lower() == 'ru':
    print('Вы выбрали русский язык.\nТеперь, когда все готово можем приступать к поиску :)')
elif language.lower() == 'en':
    print('Вы выбрали английский язык.\nТеперь, когда все готово можем приступать к поиску :)')
else:
    print('К сожалению, такого языка у меня в базе нет, поэтому будем пользоваться русским :) ')


try:
    # Создаем базу данных в которой будут храниться ключи пользователя, пока он работает в программе.
    create_db(token, secret_key, language)


    def get_data():
        # получаем ключи и выбор языка из таблицы базы данных
        token = get_data_db()[0][0]
        secret_key = get_data_db()[0][1]
        lang = get_data_db()[0][2]

        # Создаем цикл, в котором можно запрашивать адреса и получать по ним необходимые данные.
        # Выход из цикла можно осуществить введя слова - exit или выход
        # Для адреса будет выведены: широта и долгота, почтовый индекс и регион
        while True:

            print('*** --- --- --- ***')
            addr = input('Пожалуйста, введите адрес (Если вы не знаете точный адрес, попробуйте ввести просто город и улицу):\n'
                         'Если Вам необходимо выйти - введите exit или выход\n')
            data = []
            # Делаем проверку не захотел ли пользователь выйти? Если да, то стираем таблицу в БД и выходим
            if addr.lower() == 'exit' or addr.lower() == 'выход':
                delete_db()
                break
            else:
                # Поключаемся к сервису Dadata. Делаем запрос на адреса и выводим их на экран.
                dadata = Dadata(token, secret_key)
                res = dadata.suggest('address', addr, language=lang, count=20)
                print('*** --- --- --- ***')
                for count, values in enumerate(res, start=1):
                    data.append(values['value'])
                    print(f"|{count}| = {values['value']}")


                print('*** --- --- --- ***')
                # Выбираем номер адреса из предложенного сервисом списка.
                addr_2 = input('Введите цифру нужного Вам адреса\n'
                          'Если Вам необходимо выйти - введите exit или выход\n')
                # Делаем проверку не захотел ли пользователь выйти? Если да, то стираем таблицу в БД и выходим
                if addr_2.lower() =='exit' or addr_2.lower() == 'выход':
                    delete_db()
                    break
                else:
                    # Выбираем точный адрес
                    res = dadata.clean('address', data[int(addr_2)-1])
                    # Получаем данные о широте и долготе.
                    lat =res['geo_lat']
                    lon = res['geo_lon']
                    # Выводим на экран выбранный адрес, широту и долготу, почтовый индекс и регион
                    print('__________')
                    print(f"Выбранный Вами адрес:\n{res['result']}")
                    print('__________')
                    print(f"Координаты адреса:\nШирота - {lat}\nДолгота - {lon}")
                    print('__________')
                    print(f"Почтовый индекс:\n{res['postal_code']}")
                    print('__________')
                    print(f"Регион:\n{res['federal_district']}")


except Exception as er:
    print(f'К сожалению возникла ошибка: {er}')


if __name__ == '__main__':
    get_data()